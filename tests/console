#!/usr/bin/env php
<?php

use Psy\Shell;
use Psy\Configuration;
use Symfony\Component\VarDumper\Caster\Caster;
use TeamWorkPm\Rest\Response\JSON;

require __DIR__ . '/bootstrap.php';

$casterToArray = function ($model) {
    $results = [];
    foreach ($model as $key => $value) {
        if ($value instanceof ArrayAccess) {
            $processArrayAccess = function($value) use (&$processArrayAccess) {
                $array = [];
                foreach ($value->getArrayCopy() as $key => $val) {
                    $array[$key] = $val instanceof ArrayAccess ? $processArrayAccess($val) : $val;
                }
                return $array;
            };
            $value = $processArrayAccess($value);
        }
        $results[Caster::PREFIX_VIRTUAL . $key] = $value;
    }

    return $results;
};

$config = new Configuration([
    'colorMode' => \Psy\Configuration::COLOR_MODE_FORCED,
    'updateCheck' => \Psy\VersionUpdater\Checker::NEVER
]);

$config->getPresenter()->addCasters([
    JSON::class => $casterToArray,
    TeamWorkPm\Exception::class => function ($err) {
        $results = [];
        $results[Caster::PREFIX_VIRTUAL . 'message'] = $err->getMessage();
        return $results;
    }
]);
$shell = new Shell($config);
$shell->run();